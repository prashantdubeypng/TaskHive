<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TaskHive - Guest Mode</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Segoe UI', sans-serif; }
        body { background: #f0f2f5; min-height: 100vh; }

        /* Navbar */
        .navbar {
            position: fixed; top: 0; left: 0; right: 0;
            background: #fff; padding: 1rem 2rem;
            display: flex; justify-content: space-between; align-items: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            z-index: 1000;
        }
        .nav-brand { font-size: 1.5rem; font-weight: 600; color: #6c5ce7; }
        .nav-items { display: flex; gap: 1rem; align-items: center; }
        .nav-button {
            padding: 0.5rem 1rem; border-radius: 8px; cursor: pointer;
            background: #f0f2f5; border: none;
            transition: 0.3s ease;
        }
        .nav-button:hover { background: #6c5ce7; color: #fff; }

        /* Guest Notice */
        .guest-notice {
            position: fixed; top: 60px; left: 50%;
            transform: translateX(-50%);
            background: #ff4757; color: #fff;
            padding: 10px 20px; border-radius: 8px;
            font-size: 14px; z-index: 2000;
            animation: slideDown 0.8s ease;
        }
        @keyframes slideDown {
            0% { transform: translate(-50%, -100%); opacity: 0; }
            100% { transform: translate(-50%, 0); opacity: 1; }
        }

        /* Layout */
        .container {
            margin-top: 120px;
            display: grid; grid-template-columns: 280px 1fr;
            gap: 2rem; padding: 2rem;
            max-width: 1400px; margin-inline: auto;
        }
        .teams-section, .todo-section {
            background: #fff; padding: 1.5rem;
            border-radius: 15px; box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            animation: fadeIn 0.5s ease;
        }
        .section-header { margin-bottom: 1rem; }
        h2 { color: #2d3436; font-size: 1.5rem; }

        ul { list-style: none; margin-top: 10px; }
        li { background: #f1f2f6; margin: 6px 0; padding: 8px; border-radius: 6px; }

        /* Floating Buttons */
        .floating-buttons {
            position: fixed; bottom: 2rem; right: 2rem;
            display: flex; flex-direction: column; gap: 1rem;
        }
        .fab {
            width: 55px; height: 55px;
            border-radius: 50%; background: #6c5ce7; color: #fff;
            border: none; display: flex; align-items: center; justify-content: center;
            font-size: 1.4rem; cursor: pointer;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            transition: 0.3s ease;
        }
        .fab:hover { background: #5b4bc4; transform: scale(1.1) rotate(90deg); }

        /* Modal */
        #guestModal {
            display: none; position: fixed; inset: 0;
            background: rgba(0,0,0,0.6);
            display: flex; align-items: center; justify-content: center;
            z-index: 5000;
        }
        .modal-content {
            background: rgba(255,255,255,0.95);
            padding: 20px 30px; border-radius: 15px;
            width: 350px; text-align: center;
            backdrop-filter: blur(10px);
            transform: scale(0.8);
            opacity: 0;
            animation: popUp 0.5s forwards;
            position: relative;
        }
        .close-btn {
            position: absolute; top: 10px; right: 15px;
            font-size: 18px; cursor: pointer; color: #555;
        }
        @keyframes popUp {
            100% { transform: scale(1); opacity: 1; }
        }
        .modal-content h3 { color: #6c5ce7; margin-bottom: 15px; }
        .modal-btn {
            margin-top: 15px; display: inline-block;
            padding: 10px 15px; border-radius: 8px;
            text-decoration: none; color: #fff;
            font-weight: bold; transition: 0.3s;
        }
        .login-btn { background: #6c5ce7; margin-right: 10px; }
        .github-btn { background: #333; }
        .modal-btn:hover { opacity: 0.8; }
    </style>
</head>
<body>

<!-- Navbar -->
<nav class="navbar">
    <div class="nav-brand">TaskHive</div>
    <div class="nav-items">
        <button class="nav-button" id="createTeamBtn"><i class="fas fa-users"></i> Create Team</button>
        <button class="nav-button" id="addTaskBtn"><i class="fas fa-plus"></i> Add Task</button>
        <a href="https://github.com/prashantdubeypng/TaskHive" class="nav-button" target="_blank"><i class="fab fa-github"></i> View Code</a>
        <a href="/user" class="nav-button">Login</a>
    </div>
</nav>

<!-- Guest Notice -->
<div class="guest-notice">
    You are in Guest Mode. Actions won't be saved.
    <a href="/user" style="color:#fff;text-decoration:underline;">Login</a> or
    <a href="https://github.com/prashantdubeypng/TaskHive" style="color:#fff;text-decoration:underline;" target="_blank">View Code</a>
</div>

<!-- Main Content -->
<div class="container">
    <section class="teams-section">
        <div class="section-header"><h2>Teams (Preview)</h2></div>
        <ul id="teamList">
            <li>Sample Team A</li>
            <li>Sample Team B</li>
        </ul>
    </section>

    <section class="todo-section">
        <div class="section-header"><h2>Todo List (Preview)</h2></div>
        <ul id="taskList">
            <li>Sample Task 1</li>
            <li>Sample Task 2</li>
        </ul>
    </section>
</div>

<!-- Floating Action Buttons -->
<div class="floating-buttons">
    <button class="fab" id="guestAddTodo"><i class="fas fa-plus"></i></button>
</div>

<!-- Modal -->
<div id="guestModal">
    <div class="modal-content">
        <span class="close-btn" id="closeModal">&times;</span>
        <h3 id="modalTitle">Login Required</h3>
        <input type="text" id="inputField" placeholder="Enter here..." style="width:90%;padding:8px;margin:10px 0;border-radius:6px;border:1px solid #ccc;display:none;">
        <button id="saveBtn" style="display:none;background:#6c5ce7;color:#fff;padding:8px 14px;border:none;border-radius:8px;cursor:pointer;">Save</button>
        <p id="modalDesc">Your actions won't be saved in Guest Mode.</p>
        <div>
            <a href="/user" class="modal-btn login-btn">Login</a>
            <a href="https://github.com/prashantdubeypng/TaskHive" class="modal-btn github-btn" target="_blank">View Code</a>
        </div>
    </div>
</div>

<script>
    const modal = document.getElementById('guestModal');
    const closeBtn = document.getElementById('closeModal');
    const inputField = document.getElementById('inputField');
    const saveBtn = document.getElementById('saveBtn');
    const modalTitle = document.getElementById('modalTitle');
    const modalDesc = document.getElementById('modalDesc');

    const teamList = document.getElementById('teamList');
    const taskList = document.getElementById('taskList');

    let currentAction = "";

    function openModal(action) {
        modal.style.display = 'flex';
        modalTitle.innerText = action === "team" ? "Create a Team" : "Add a Task";
        modalDesc.style.display = "none";
        inputField.style.display = "block";
        saveBtn.style.display = "inline-block";
        inputField.value = "";
        currentAction = action;
    }

    closeBtn.onclick = () => modal.style.display = 'none';
    modal.addEventListener('click', (e) => { if (e.target === modal) modal.style.display = 'none'; });

    document.getElementById('createTeamBtn').addEventListener('click', () => openModal("team"));
    document.getElementById('addTaskBtn').addEventListener('click', () => openModal("task"));
    document.getElementById('guestAddTodo').addEventListener('click', () => openModal("task"));

    saveBtn.onclick = () => {
        const value = inputField.value.trim();
        if (!value) return;
        if (currentAction === "team") {
            const li = document.createElement('li');
            li.textContent = value;
            teamList.appendChild(li);
        } else {
            const li = document.createElement('li');
            li.textContent = value;
            taskList.appendChild(li);
        }
        modal.style.display = 'none';
    }
</script>

</body>
</html>
